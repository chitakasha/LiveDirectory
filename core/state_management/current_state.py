import json
import os

def _get_state_file_path():
    return "data/state.json"

def _get_current_state():
    """
    Retrieves the current state of the Live Directory from a JSON file.

    Returns:
        dict: The current state of the directory.
    """

    state_file_path = _get_state_file_path()

    # Check if the state file exists
    if not os.path.exists(state_file_path):
        # If not, return an empty state
        return {}

    # Load the current state from the JSON file
    with open(state_file_path, "r") as f:
        current_state = json.load(f)

    return current_state

def _update_state(current_state, generated_text):
    """
    Updates the current state of the Live Directory based on the generated text.

    Parameters:
        current_state (dict): The current state of the directory.
        generated_text (str): The text generated by the autogen module.

    Returns:
        dict: The updated state of the directory.
    """

    # Update the state logic here
    # For demonstration, we'll just update a 'last_generated_text' field
    current_state['last_generated_text'] = generated_text

    # Save the updated state back to the JSON file
    state_file_path = _get_state_file_path()
    with open(state_file_path, "w") as f:
        json.dump(current_state, f, indent=4)

    return current_state

def get_current_state():
    return _get_current_state()

def update_state(current_state, generated_text):
    return _update_state(current_state, generated_text)
